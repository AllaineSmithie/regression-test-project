name: 🐧 SwiftShader Required
on: [push, pull_request]

jobs:
  vulkan-normal:
    runs-on: "ubuntu-20.04"
    name: Editor and exported project with sanitizers (target=debug, dev_build=yes, use_ubsan=yes, use_asan=yes)

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm \
            xvfb wget2 unzip python scons git

      - name: Download MGS(GIT)
        run: |
          git clone https://github.com/AllaineSmithie/mgs_godot
          cd mgs_godot
          git checkout master
          cd ../

      - name: Compile MGS
        run: |
          cd mgs_godot
          scons -j2 dev_build=yes target=editor use_asan=yes use_ubsan=yes linker=gold
          cp bin/mgs.linuxbsd.editor.dev.x86_64.san ../
          cd ../
          rm -rf mgs_godot

      # Download, unzip and setup SwiftShader library
      - name: Download SwiftShader
        run: |
          wget https://github.com/godotengine/regression-test-project/releases/download/_ci-deps/swiftshader-ubuntu20.04-20211002.zip
          unzip swiftshader-ubuntu20.04-20211002.zip
          curr="$(pwd)/libvk_swiftshader.so"
          sed -i "s|PATH_TO_CHANGE|$curr|" vk_swiftshader_icd.json

      - name: Open Editor
        run: |
          VK_ICD_FILENAMES=$(pwd)/vk_swiftshader_icd.json DRI_PRIME=0 xvfb-run ./godot.linuxbsd.editor.dev.x86_64.san --audio-driver Dummy -e --quit --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          misc/check_ci_log.py sanitizers_log.txt

      - name: Run Project
        run: |
          VK_ICD_FILENAMES=$(pwd)/vk_swiftshader_icd.json DRI_PRIME=0 xvfb-run ./godot.linuxbsd.editor.dev.x86_64.san 180 --audio-driver Dummy --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
          misc/check_ci_log.py sanitizers_log.txt

      - name: Run Project GLES3
        run: |
          DRI_PRIME=0 xvfb-run ./godot.linuxbsd.editor.dev.x86_64.san 180 --rendering-driver opengl3 --audio-driver Dummy --path $(pwd) 2>&1 | tee sanitizers_log.txt || true
